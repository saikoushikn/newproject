"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.searchUp = exports.ensureFileExists = exports.ensureDirectoryExists = void 0;
const path = require("node:path");
const fs = require("graceful-fs");
function ensureDirectoryExists(filePath) {
    if (fs.existsSync(filePath)) {
        return;
    }
    ensureDirectoryExists(path.dirname(filePath));
    fs.mkdirSync(filePath);
}
exports.ensureDirectoryExists = ensureDirectoryExists;
function ensureFileExists(filePath) {
    ensureDirectoryExists(path.dirname(filePath));
    fs.closeSync(fs.openSync(filePath, 'w'));
}
exports.ensureFileExists = ensureFileExists;
/**
 * Traverse up a file path and search for the given file name.
 *
 * @param start File or folder path to start searching from
 * @param fileName File name to search for
 */
function searchUp(start, fileName) {
    const filePath = path.join(start, fileName);
    if (fs.existsSync(filePath)) {
        return filePath;
    }
    const parent = path.resolve(start, '..');
    if (parent === start) {
        return;
    }
    return searchUp(parent, fileName);
}
exports.searchUp = searchUp;
//# sourceMappingURL=fileSystemHandler.js.map